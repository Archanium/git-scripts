#!/bin/bash
# From: http://snippets.freerobby.com/post/491644841/remove-merged-branches-in-git

  current_branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
  if [ "$current_branch" != "master" ]; then
    echo "WARNING: You are on branch $current_branch, NOT master."
  fi
  echo "Fetching merged branches..."
  git remote prune origin
  remote_branches=$(git branch -r --merged | grep -v '/master$' | grep -v '/dev$' | grep -v '/develop$' | grep -v '/hotfix$' | grep -v '/test$' | grep -v "/${current_branch}$" | grep 'origin' | grep -v "/.*->.*/")
  local_branches=$(git branch --merged | grep -v 'master$' | grep -v "${current_branch}$" | grep -v "test$" | grep -v "dev$" | grep -v "develop$" | grep -v "hotfix$"  )
  if [ -z "$remote_branches" ] && [ -z "$local_branches" ]; then
    echo "No existing branches have been merged into $current_branch."
  else
    echo "This will remove the following branches:"
    if [ -n "$remote_branches" ]; then
      echo "$remote_branches"
    fi
    if [ -n "$local_branches" ]; then
      echo "$local_branches"
    fi
    read -p "Continue? (y/n): " -n 1 choice
    echo
    if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
      read -p "Remove remote branches (y/n): " -n 1 choice
      if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
        git push origin `git branch -r --merged | grep -v '/master$' | grep -v '/dev$' | grep -v '/develop$' | grep -v '/hotfix$' | grep -v '/test$' | grep -v "/${current_branch}$"  | grep "origin" | grep -v "/.*->.*/" | sed 's/origin\//:/g' | tr -d '\n'`
      fi
      # Remove local branches
      git branch -d `git branch --merged | grep -v 'master$' | grep -v "test$" |  grep -v "dev$" | grep -v "hotfix$" | grep -v "${current_branch}$" | sed 's/origin\///g' | tr -d '\n'`
    else
      echo "No branches removed."
    fi
  fi
